pipeline:
  name: my-pipeline
  identifier: mypipeline
  projectIdentifier: jagruti_playground_project
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: gitconnector
        build: <+input>
  stages:
    - stage:
        name: build
        identifier: build
        type: CI
        spec:
          cloneCodebase: true
          caching:
            enabled: true
            override: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: my-java-application
                  identifier: myjavaapplication
                  spec:
                    shell: Sh
                    command: |-
                      echo "building java application"
                      mvn -B package --file zenzbg-template/greetings/pom.xml
              - parallel:
                  - step:
                      type: OsvScanner
                      name: OsvScanner_1
                      identifier: OsvScanner_1
                      spec:
                        mode: orchestration
                        config: default
                        target:
                          type: repository
                          detection: auto
                        advanced:
                          log:
                            level: info
                  - step:
                      type: Owasp
                      name: Owasp_1
                      identifier: Owasp_1
                      spec:
                        mode: orchestration
                        config: default
                        target:
                          type: repository
                          detection: auto
                        advanced:
                          log:
                            level: info
              - step:
                  type: BuildAndPushDockerRegistry
                  name: BuildAndPushDockerRegistry_1
                  identifier: BuildAndPushDockerRegistry_1
                  spec:
                    connectorRef: dockerconnector
                    repo: rushiops/demo-harness
                    tags:
                      - latest
                    dockerfile: zenzbg-template/greetings/Dockerfile
                    context: zenzbg-template/greetings
          sharedPaths:
            - /var/run
        description: ""
        when:
          pipelineStatus: Success
    - stage:
        name: deploy
        identifier: deploy
        description: ""
        type: Deployment
        spec:
          deploymentType: Ssh
          service:
            serviceRef: javaappservice
          environment:
            environmentRef: envjavaapp
            deployToAll: false
            infrastructureDefinitions:
              - identifier: azurevmtypeinfra
          execution:
            steps:
              - step:
                  type: ShellScriptProvision
                  name: ShellScriptProvision_1
                  identifier: ShellScriptProvision_1
                  spec:
                    source:
                      type: Inline
                      spec:
                        script: |
                          #!/bin/bash


                          echo "$key" > key2.pem
                          chmod 400 key2.pem
                          ssh -i key2.pem -o StrictHostKeyChecking=no vm@20.244.32.79 <<EOF
                          echo "Connected to EC2."
                          curl ifconfig.io
                          whoami
                          cat /etc/os-release
                          pwd
                          echo "Pulling image "
                          sudo docker pull 46990406/demo-harness:latest
                          sudo docker stop demo-harness 
                          sudo docker rm demo-harness
                          sudo docker run -d --name demo-harness -p 8080:8080 46990406/demo-harness:latest
                          EOF 
                    environmentVariables:
                      - name: key
                        type: String
                        value: <+secrets.getValue("azure-key-file")>
                  timeout: 10m
            rollbackSteps: []
        tags: {}
        delegateSelectors:
          - docker-delegate
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: ManualIntervention
                spec:
                  onTimeout:
                    action:
                      type: StageRollback
                  timeout: 1d
